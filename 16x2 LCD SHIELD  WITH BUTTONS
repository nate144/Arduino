//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PROGRAM:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 16x2 LCD SHIELD  WITH BUTTONS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CREDITS:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LIBRARY ORIGINALLY ADDED 18 APRIL 2008, BY DAVID A. MELLIS
// LIBRARY MODIFIED 5 JULY 2009, BY LIMOR FRIED (http://www.ladyada.net)
// EXAMPLE ADDED 9 JULY 2009, BY TOM IGOE
// MODIFIED 22 NOVEMBER 2010, BY TOM IGOE
// MODIFIED 7 NOVEMBER 2016, BY ARTURO GUADALUPI
// BUTTON FUNCTIONALITY BY MARK BRAMWELL, JULY 2010
// EDITED BY: NATE GROSS, DECEMBER 2018
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DESCRIPTION:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TESTS THE FUNCTIONALITY OF THE SCREEN AND BUTTON MATRIX BY RUNNING A COUNTER ON THE SCREEN AND DISPLAYING THE NAME OF THE
// BUTTON CURRENTLY BEING PRESSED.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SOURCES:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// http://www.arduino.cc/en/Tutorial/LiquidCrystalHelloWorld
// https://www.dfrobot.com/wiki/index.php/Arduino_LCD_KeyPad_Shield_(SKU:_DFR0009)#Pin_Allocation
// https://www.aliexpress.com/item/1602-LCD-Keypad-Shield-Board-Blue-Backlight-for-Arduino-LCD-Duemilanove-Robot/32918994272.html?ws_ab_test=searchweb0_0,searchweb201602_2_10065_10068_10130_10890_5730315_10547_319_10546_317_10548_10545_10696_453_10084_454_10083_10618_5729215_10307_538_537_536_10059_10884_10887_100031_321_322_10103-10890,searchweb201603_2,ppcSwitch_0&algo_expid=cc848f39-4239-482f-9383-07612a4d90ee-3&algo_pvid=cc848f39-4239-482f-9383-07612a4d90ee
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PINOUT:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LCD RS PIN TO DIGITAL PIN 8
// LCD EN PIN TO DIGITAL PIN 9
// LCD D4 PIN TO DIGITAL PIN 4
// LCD D5 PIN TO DIGITAL PIN 5
// LCD D6 PIN TO DIGITAL PIN 6
// LCD D7 PIN TO DIGITAL PIN 7
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LIBRARIES:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <LiquidCrystal.h>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CONSTANTS:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const int rs = 8, en = 9, d4 = 4, d5 = 5, d6 = 6, d7 = 7;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

int lcd_key     = 0;
int adc_key_in  = 0;
#define btnRIGHT  0
#define btnUP     1
#define btnDOWN   2
#define btnLEFT   3
#define btnSELECT 4
#define btnNONE   5
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// VARIABLES:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int read_LCD_buttons()
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// READ BUTTONS:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
{
adc_key_in = analogRead(0);      // read the value from the sensor
// my buttons when read are centered at these valies: 0, 144, 329, 504, 741
// we add approx 50 to those values and check to see if we are close
if (adc_key_in > 1000) return btnNONE; // We make this the 1st option for speed reasons since it will be the most likely result
// For V1.1 us this threshold
if (adc_key_in < 50)   return btnRIGHT;  
if (adc_key_in < 250)  return btnUP;
if (adc_key_in < 450)  return btnDOWN;
if (adc_key_in < 650)  return btnLEFT;
if (adc_key_in < 850)  return btnSELECT;  

// For V1.0 comment the other threshold and use the one below:
/*
if (adc_key_in < 50)   return btnRIGHT;  
if (adc_key_in < 195)  return btnUP;
if (adc_key_in < 380)  return btnDOWN;
if (adc_key_in < 555)  return btnLEFT;
if (adc_key_in < 790)  return btnSELECT;   
*/

return btnNONE;  // when all others fail, return this...
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PROGRAM SETUP:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void setup()
{
lcd.begin(16, 2);    //START THE LIBRARY
lcd.setCursor(0,0);
lcd.print("Push the buttons");    //PRINT A SIMPLE MESSAGE
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MAIN PROGRAM:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void loop()
{
lcd.setCursor(9,1);            // move cursor to second line "1" and 9 spaces over
lcd.print(millis()/1000);      // display seconds elapsed since power-up


lcd.setCursor(0,1);            // move to the begining of the second line
lcd_key = read_LCD_buttons();  // read the buttons

switch (lcd_key)               // depending on which button was pushed, we perform an action
{
   case btnRIGHT:
     {
     lcd.print("RIGHT ");
     break;
     }
   case btnLEFT:
     {
     lcd.print("LEFT   ");
     break;
     }
   case btnUP:
     {
     lcd.print("UP    ");
     break;
     }
   case btnDOWN:
     {
     lcd.print("DOWN  ");
     break;
     }
   case btnSELECT:
     {
     lcd.print("SELECT");
     break;
     }
     case btnNONE:
     {
     lcd.print("NONE  ");
     break;
     }
}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SUBROUTINE:
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void subNAME() {
  // PROGRAM CODE GOES HERE
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
